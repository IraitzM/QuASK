[project]
name = "quask"
dynamic = ["version"]
authors = [
    {name = "Massimiliano Incudini", email = "massimiliano.incudini@univr.it"},
    {name = "Francesco Di Marcantonio", email = "massimiliano.incudini@univr.it"},
    {name = "Roman Wixinger", email = "massimiliano.incudini@univr.it"},
    {name = "Sofia Vallecorsa", email = "massimiliano.incudini@univr.it"},
    {name = "Michele Grossi", email = "massimiliano.incudini@univr.it"},
]
requires-python = ">=3.10"
description = "Quantum Advantage Seeker with Kernels (QuASK): a software framework to speed up the research in quantum machine learning"
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10"
]
dependencies = [
    "pandas>=2.2.3",
    "pennylane>=0.40.0",
    "qiskit-ibm-runtime>=0.35.0",
    "qiskit>=1.3.2",
    "scikit-learn>=1.6.1",
    "scipy>=1.15.1",
]
readme = {file = "README.md", content-type = "text/markdown"}

[project.urls]
Homepage = "https://quask.web.cern.ch/"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.build]
includes = ["src/quask/"]

[tool.pdm.version]
source = "file"
path = "src/quask/__version__.py"

[project.optional-dependencies]
dev = [
    "nose2[coverage_plugin]>=0.15.1",
    "tox-pdm>=0.7.2",
    "coverage>=7.6.10",
]
demo = [
    "ipykernel>=6.29.5",
]
docs = [
    "sphinx-rtd-theme>=3.0.2",
    "sphinx>=8.1.3",
    "sphinxcontrib-napoleon>=0.7",
    "sphinx-autoapi>=3.4.0",
]
release = [
    "pre-commit>=4.1.0",
    "python-semantic-release>=9.16.1",
]

# Ruff
[tool.ruff]
exclude = [".venv","data", "examples"]
line-length = 79

# - https://docs.astral.sh/ruff/rules/
[tool.ruff.lint]
extend-select = [
  "UP",  # pyupgrade
  "D",   # pydocstyle
  "F",   # fake8
  "E",   # PyCodeStyle
  "I",   # isort
  "N",   # Naming
  "RUF", # Ruff
  "PL",  # PyLint
]
ignore = ["D102", "N802", "PLR0904"]

[tool.ruff.lint.pydocstyle]
convention = "google"

# SemVer
[tool.semantic_release]
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
version_variables = ["src/quask/__version__.py:__version__"]
allow_zero_version = true
no_git_verify = false
tag_format = "{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
exclude_commit_patterns = []
mode = "update"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = ["enhance","build", "chore", "ci", "docs", "style", "refactor", "test"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[dependency-groups]
demo = [
    "matplotlib>=3.10.0",
]
